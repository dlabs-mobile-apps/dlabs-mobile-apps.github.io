"use strict";(self.webpackChunkdlabs_mobile_apps_github_io=self.webpackChunkdlabs_mobile_apps_github_io||[]).push([[7619],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),h=n,y=d["".concat(l,".").concat(h)]||d[h]||u[h]||o;return r?a.createElement(y,s(s({ref:t},p),{},{components:r})):a.createElement(y,s({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},15:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:1,description:"Crashlytics helps you to collect analytics and details about crashes and errors that occur in your app. It does this through three aspects there are [Logs]  Log events in your app to be sent with the crash report for context if your app crashes, [Crash] reports Every crash is automatically turned into a crash report and sent when the application next opens and [Stack traces]  Even when an error is caught and your app recovers, the Dart stack trace can still be sent."},s="Crashlytics",i={unversionedId:"tools/crashlytics",id:"tools/crashlytics",title:"Crashlytics",description:"Crashlytics helps you to collect analytics and details about crashes and errors that occur in your app. It does this through three aspects there are [Logs]  Log events in your app to be sent with the crash report for context if your app crashes, [Crash] reports Every crash is automatically turned into a crash report and sent when the application next opens and [Stack traces]  Even when an error is caught and your app recovers, the Dart stack trace can still be sent.",source:"@site/docs/tools/crashlytics.md",sourceDirName:"tools",slug:"/tools/crashlytics",permalink:"/docs/tools/crashlytics",draft:!1,tags:[],version:"current",lastUpdatedAt:1697096960,formattedLastUpdatedAt:"Oct 12, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Crashlytics helps you to collect analytics and details about crashes and errors that occur in your app. It does this through three aspects there are [Logs]  Log events in your app to be sent with the crash report for context if your app crashes, [Crash] reports Every crash is automatically turned into a crash report and sent when the application next opens and [Stack traces]  Even when an error is caught and your app recovers, the Dart stack trace can still be sent."},sidebar:"tutorialSidebar",previous:{title:"Release your Android app",permalink:"/docs/releases/releas-android"},next:{title:"Fastlane",permalink:"/docs/ci-cd/fastlane"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"Android",id:"android",level:3},{value:"iOS",id:"ios",level:3},{value:"Usage",id:"usage",level:2},{value:"Crashlytics Service",id:"crashlytics-service",level:3},{value:"Auto Upload dSYMs",id:"auto-upload-dsyms",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"crashlytics"},"Crashlytics"),(0,n.kt)("p",null,"Crashlytics helps you to collect analytics and details about crashes and errors that occur in your app. It does this through three aspects:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Logs: Log events in your app to be sent with the crash report for context if your app crashes."),(0,n.kt)("li",{parentName:"ul"},"Crash reports: Every crash is automatically turned into a crash report and sent when the application next opens."),(0,n.kt)("li",{parentName:"ul"},"Stack traces: Even when an error is caught and your app recovers, the Dart stack trace can still be sent.")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"Add firebase crashlytics plugin "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"flutter pub add firebase_crashlytics\n")),(0,n.kt)("h3",{id:"android"},"Android"),(0,n.kt)("p",null,"Dart-only Firebase initialization for Android currently only supports reporting Dart exceptions. To report native Android exceptions, please follow the steps below."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add the following classpath to your android/build.gradle file."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=android/build.gradle",title:"android/build.gradle"}," dependencies {\n     // ... other dependencies such as 'com.google.gms:google-services'\n     classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'\n }\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Apply the following to your android/app/build.gradle file."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=android/app/build.gradle",title:"android/app/build.gradle"}," // ... other imports\n\n android {\n // ... your android config\n }\n\n dependencies {\n // ... your dependencies\n }\n\n // This must appear at the bottom of the file\n apply plugin: 'com.google.firebase.crashlytics'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Rebuild your app"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"}," flutter run\n")))),(0,n.kt)("h3",{id:"ios"},"iOS"),(0,n.kt)("p",null,"Nothing to config but you must upload dSYM file from built ipa. see ",(0,n.kt)("a",{parentName:"p",href:"#auto-upload-dsyms"},"Auto Upload dSYMs"),"."),(0,n.kt)("p",null,"Then rebuild your app"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"flutter run\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"First thing first you must initialize firebase service then crash the app for initial crashlytics detection on firebase"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize Firebase.\nawait Firebase.initializeApp();\n\n// Elsewhere in your code\nFirebaseCrashlytics.instance.crash();\n")),(0,n.kt)("p",null,"This will crash the currently running application. You will then need to manually re-run your application on your emulator for Crashlytics to submit the crash report to the Firebase Console."),(0,n.kt)("p",null,"Then open your crashlytics console there are should has crashlitics dashboard now."),(0,n.kt)("h3",{id:"crashlytics-service"},"Crashlytics Service"),(0,n.kt)("p",null,"There are Crashlytics Service on project."),(0,n.kt)("p",null,"There a method :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"setIdentifier : for identification credential of error."),(0,n.kt)("li",{parentName:"ul"},"reportError : for record error on crashlitics with exception and stacktrace.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// example\nawait CrashlyticsService.reportError(e, stackTrace, log: detailMessage);\n")),(0,n.kt)("h2",{id:"auto-upload-dsyms"},"Auto Upload dSYMs"),(0,n.kt)("p",null,"This auto upload dSYMs file is include in Release Script when build IPA file completed."),(0,n.kt)("p",null,"see ",(0,n.kt)("a",{parentName:"p",href:"/docs/repository/git-bash"},"relese script"),"."))}u.isMDXComponent=!0}}]);