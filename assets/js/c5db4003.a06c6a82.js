"use strict";(self.webpackChunkdlabs_mobile_apps_github_io=self.webpackChunkdlabs_mobile_apps_github_io||[]).push([[9379],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:4,tags:["design pattern"],description:"Error Handling"},s="Error Handling",i={unversionedId:"design-pattern/error-handling",id:"design-pattern/error-handling",title:"Error Handling",description:"Error Handling",source:"@site/docs/design-pattern/error-handling.md",sourceDirName:"design-pattern",slug:"/design-pattern/error-handling",permalink:"/docs/design-pattern/error-handling",draft:!1,tags:[{label:"design pattern",permalink:"/docs/tags/design-pattern"}],version:"current",lastUpdatedAt:1670217800,formattedLastUpdatedAt:"Dec 5, 2022",sidebarPosition:4,frontMatter:{sidebar_position:4,tags:["design pattern"],description:"Error Handling"},sidebar:"tutorialSidebar",previous:{title:"API Client",permalink:"/docs/design-pattern/api-client"},next:{title:"App Link",permalink:"/docs/design-pattern/app-link"}},l={},p=[{value:"Dio Client Error Handling",id:"dio-client-error-handling",level:2},{value:"Value Exception (Custom Error Handling)",id:"value-exception-custom-error-handling",level:2}],u={toc:p};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"error-handling"},"Error Handling"),(0,a.kt)("p",null,"We have error handling for dio client and custom error that can be found at  ",(0,a.kt)("inlineCode",{parentName:"p"},"lib/core/client/result.dart"),"."),(0,a.kt)("h2",{id:"dio-client-error-handling"},"Dio Client Error Handling"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Every return response must using Result model that located in client folder :"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"static Future getPosts(int limit, int offset) async {\n  debugPrint('--- DummyRepository @getPosts : ---');\n  var endPoint = '/posts?_start=$offset&_limit=$limit';\n  Response<String> response = await Client().dio.get(endPoint);\n\n  return Result(\n    ResultType.Success,\n    response,\n    'Get data list post success',\n    data: postModelFromMap(response.data!),\n  );\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Use Info model for key ",(0,a.kt)("inlineCode",{parentName:"p"},'"info"')," below located at ",(0,a.kt)("inlineCode",{parentName:"p"},"lib/core/client/info.dart")," to every response :"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "error",\n    "data": null,\n    "info": {\n        "id": "ERR_LOGIN_EMAIL_OR_PASSWORD_IS_WRONG",\n        "message": "Incorrect username or password",\n        "messageEn": null,\n        "messageId": null,\n        "field": "email",\n        "redirect": null\n    }\n}\n')),(0,a.kt)("p",{parentName:"li"},"example :"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class LoginResponse {\n  LoginResponse({\n    this.status,\n    this.data,\n    this.info,\n  });\n\n  String? status;\n  LoginData? data;\n  Info? info; // this global info\n\n  .\n  .\n  .\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Cacth error on bloc with ",(0,a.kt)("inlineCode",{parentName:"p"},"Result.fromError(e)")," :"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// bloc\n} catch (e) {\n  var error = Result.fromError(e);\n  emit(LoginError(\n    statusCode: error.statusCode,\n    message: error.message\n  ));\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Catch error from status code 200 :"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// bloc\ntry {\n  emit(LoginLoading());\n\n  var data = LoginRequest(email: email!, password: password!);\n  Result<LoginResponse> result = await LoginRepository.login(data);\n\n  // error from status code 200\n  if (result.data?.status == ResultType.Error.value) {\n    var error = Result.fromError(\n      result.data?.info?.message, \n      response: result.response,\n    );\n\n    emit(LoginError(\n      statusCode: error.statusCode,\n      message: error.message\n      detailMessage: error.detailMessage\n    ));\n\n    return;\n  }\n\n  emit(LoginSuccess());\n  await setSessionCurrentUser(result.data!.data!);\n} catch (e) {\n   var error = Result.fromError(e);\n    emit(LoginError(\n      statusCode: error.statusCode,\n      message: error.message\n      detailMessage: error.detailMessage\n    ));\n}\n")))),(0,a.kt)("h2",{id:"value-exception-custom-error-handling"},"Value Exception (Custom Error Handling)"),(0,a.kt)("p",null,"This value exception is used for custom error to get message error only, usages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// add anywhere in your logic\nthrow ValueException('Custom Error Message');\n\n// with error code\nthrow ValueException('Custom Error Message', ErrorCode.mobileOther.value);\n")),(0,a.kt)("p",null,"This value exception can be used for dio client also for nested method on error api status code 200, example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// inside event bloc there are method more than 1\n...\n...\n...\nawait getItems()\nawait getDetails()\n...\n...\n...\n\n\n// inside getItems \nFuture getItems() {\n...\n...\n...\n  Result<Items> result = await ItemRepository.getItems();\n  if (result.data?.status == ResultType.Error.value) {\n    throw ValueException(\n      result.data?.info?.message, // message from api\n      result.response, // put the response\n    );\n  }\n...\n...\n...\n}\n\n// inside getItems \nFuture getDetails() {\n...\n...\n...\n  Result<Details> result = await ItemRepository.getDetails();\n  if (result.data?.status == ResultType.Error.value) {\n    throw ValueException(\n      result.data?.info?.message, // message from api\n      result.response, // put the response\n    );\n  }\n...\n...\n...\n}\n")))}d.isMDXComponent=!0}}]);